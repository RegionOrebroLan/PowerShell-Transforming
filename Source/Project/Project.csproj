<Project Sdk="Microsoft.NET.Sdk">
	<PropertyGroup>
		<AssemblyName>RegionOrebroLan.PowerShell.Transforming</AssemblyName>
		<AssemblyOriginatorKeyFile>$(SolutionDir)StrongName.snk</AssemblyOriginatorKeyFile>
		<Authors>Region Örebro län</Authors>
		<Company>$(Authors)</Company>
		<CopyLocalLockFileAssemblies>true</CopyLocalLockFileAssemblies>
		<Copyright>Copyright (c) 2021 $(Company)</Copyright>
		<Description>PowerShell commands for json-, package- and xml-transformation.</Description>
		<GeneratePackageOnBuild>true</GeneratePackageOnBuild>
		<NoPackageAnalysis>true</NoPackageAnalysis>
		<NuspecFile>Project.nuspec</NuspecFile>
		<PackageProjectUrl>https://github.com/RegionOrebroLan/PowerShell-Transforming/</PackageProjectUrl>
		<PackageTags>directory-transform file-transform jdt json json-transform package package-transform powershell transformation transforms xdt xml xml-transform zipfile-transform</PackageTags>
		<PowerShellModuleGuid>eaf64c74-81dc-470f-b8e8-740660cdc516</PowerShellModuleGuid>
		<PowerShellModuleName>RegionOrebroLan.Transforming</PowerShellModuleName>
		<!-- The following tags are needed in the NuGet-package to get it working as a PS-Module-package. At least the first tag, PSModule, is required. -->
		<PowerShellModulePackageRequiredTags>PSModule PSIncludes_Cmdlet PSCmdlet_New-FileTransform PSCmdlet_New-PackageTransform PSCommand_New-FileTransform PSCommand_New-PackageTransform</PowerShellModulePackageRequiredTags>
		<RootNamespace>$(AssemblyName)</RootNamespace>
		<TargetFramework>netstandard2.0</TargetFramework>
		<VersionPrefix>2.1.0</VersionPrefix>
		<VersionSuffix></VersionSuffix>
	</PropertyGroup>
	<ItemGroup>
		<PackageReference Include="PowerShellStandard.Library" Version="5.1.0">
			<PrivateAssets>All</PrivateAssets>
		</PackageReference>
		<PackageReference Include="RegionOrebroLan.Transforming" Version="2.1.0" />
	</ItemGroup>
	<Target Name="AdditionalCleanup" AfterTargets="Clean" DependsOnTargets="EnsureProperties">
		<ItemGroup>
			<_FileToDelete Include="$(PackageOutputPath)**\*.*" />
		</ItemGroup>
		<Delete Files="@(_FileToDelete)" />
		<RemoveDir Directories="$(PowerShellModuleDirectoryPath)" />
	</Target>
	<Target Name="BuildPowerShellModuleManifest" BeforeTargets="BeforeBuild" DependsOnTargets="EnsurePowerShellModuleDirectory">
		<PropertyGroup>
			<_PowerShellVersion>5.1</_PowerShellVersion>
		</PropertyGroup>
		<ItemGroup>
			<_PowerShellModuleManifestLine Include="@{" />
			<_PowerShellModuleManifestLine Include="%09Author = %22$(Authors)%22" />
			<_PowerShellModuleManifestLine Include="%09CmdletsToExport = @(" />
			<_PowerShellModuleManifestLine Include="%09%09%22New-FileTransform%22" />
			<_PowerShellModuleManifestLine Include="%09%09%22New-PackageTransform%22" />
			<_PowerShellModuleManifestLine Include="%09)" />
			<_PowerShellModuleManifestLine Include="%09CompanyName = %22$(Company)%22" />
			<_PowerShellModuleManifestLine Include="%09CompatiblePSEditions = %22Core%22, %22Desktop%22" />
			<_PowerShellModuleManifestLine Include="%09Description = %22$(Description)%22" />
			<_PowerShellModuleManifestLine Include="%09DotNetFrameworkVersion = %224.6.2%22" />
			<_PowerShellModuleManifestLine Include="%09GUID = %22$(PowerShellModuleGuid)%22" />
			<_PowerShellModuleManifestLine Include="%09HelpInfoURI = %22$(PackageProjectUrl)%22" />
			<_PowerShellModuleManifestLine Include="%09ModuleVersion = %22$(VersionPrefix)%22" />
			<_PowerShellModuleManifestLine Include="%09PowerShellVersion = %22$(_PowerShellVersion)%22" />
			<_PowerShellModuleManifestLine Include="%09PrivateData = @{" />
			<_PowerShellModuleManifestLine Include="%09%09PSData = @{" />
			<_PowerShellModuleManifestLine Condition="$(VersionPrereleaseName) != ''" Include="%09%09%09Prerelease = %22$(VersionPrereleaseName)%22" />
			<_PowerShellModuleManifestLine Include="%09%09%09ProjectUri = %22$(PackageProjectUrl)%22" />
			<_PowerShellModuleManifestLine Include="%09%09%09Tags = %22$(PackageTags.Replace(' ', '%22, %22'))%22, %22PSEdition_Core%22, %22PSEdition_Desktop%22, %22Linux%22, %22macOS%22, %22Windows%22" />
			<_PowerShellModuleManifestLine Include="%09%09}" />
			<_PowerShellModuleManifestLine Include="%09}" />
			<_PowerShellModuleManifestLine Include="%09RootModule = %22$(AssemblyName).dll%22" />
			<_PowerShellModuleManifestLine Include="}" />
		</ItemGroup>
		<WriteLinesToFile File="$(PowerShellModuleManifestFilePath)" Lines="@(_PowerShellModuleManifestLine)" Overwrite="true" />
	</Target>
	<Target Name="EnsureAdditionalOutput" AfterTargets="Build" DependsOnTargets="EnsurePowerShellModuleDirectory">
		<Copy DestinationFolder="$(PackageOutputPath)" SourceFiles="Publish-Module.ps1" />
		<Copy DestinationFolder="$(PackageOutputPath)" SourceFiles="Publish-Module-As-NuGet-Package.ps1" />
		<ItemGroup>
			<_AdditionalPowerShellModuleFile Include="$(OutputPath)**\*.dll" />
			<_AdditionalPowerShellModuleFile Condition="$(Configuration) == 'Debug'" Include="$(OutputPath)**\*.pdb" />
		</ItemGroup>
		<Copy DestinationFolder="$(PowerShellModuleDirectoryPath)" SourceFiles="@(_AdditionalPowerShellModuleFile)" />
	</Target>
	<Target Name="EnsureNuspecProperties" BeforeTargets="BeforeBuild" DependsOnTargets="BuildPowerShellModuleManifest">
		<PropertyGroup>
			<_SymbolFilePattern>$(OutputPath)*.non-existing-file</_SymbolFilePattern>
			<_SymbolFilePattern Condition="$(Configuration) == 'Debug'">$(OutputPath)*.pdb</_SymbolFilePattern>
		</PropertyGroup>
		<PropertyGroup>
			<NuspecProperties>AssemblyFilePattern=$(OutputPath)*.dll;Authors=$(Authors);Description=$(Description);Id=$(PowerShellModuleName);Owners=$(Company);PowerShellModuleManifestFilePattern=$(PowerShellModuleDirectoryPath)*.psd1;ProjectUrl=$(PackageProjectUrl);SymbolFilePattern=$(_SymbolFilePattern);Tags=$(PackageTags) $(PowerShellModulePackageRequiredTags);Version=$(Version)</NuspecProperties>
		</PropertyGroup>
	</Target>
	<Target Name="EnsurePowerShellModuleDirectory" DependsOnTargets="EnsureProperties">
		<MakeDir Condition="!Exists('$(PowerShellModuleDirectoryPath)')" Directories="$(PowerShellModuleDirectoryPath)" />
	</Target>
	<Target Name="EnsureProperties">
		<PropertyGroup>
			<PowerShellModuleDirectoryPath>$(PackageOutputPath)$(PowerShellModuleName)\</PowerShellModuleDirectoryPath>
			<PowerShellModuleManifestFilePath>$(PowerShellModuleDirectoryPath)$(PowerShellModuleName).psd1</PowerShellModuleManifestFilePath>
			<TargetFrameworkVersionNumber>$(TargetFrameworkVersion.Replace("v", ""))</TargetFrameworkVersionNumber>
		</PropertyGroup>
	</Target>
	<Target Name="HandleAssemblyOriginatorKeyFile" BeforeTargets="BeforeBuild" Condition="$(SignAssembly) AND !Exists('$(AssemblyOriginatorKeyFile)')">
		<PropertyGroup>
			<_DevelopmentAssemblyOriginatorKeyFile>$(SolutionDir)StrongName.Development.snk</_DevelopmentAssemblyOriginatorKeyFile>
		</PropertyGroup>
		<Warning Text="The strong-name-key-file '$(AssemblyOriginatorKeyFile)' does not exist. The strong-name-key-file '$(_DevelopmentAssemblyOriginatorKeyFile)' is used instead." />
		<PropertyGroup>
			<AssemblyOriginatorKeyFile>$(_DevelopmentAssemblyOriginatorKeyFile)</AssemblyOriginatorKeyFile>
		</PropertyGroup>
	</Target>
</Project>